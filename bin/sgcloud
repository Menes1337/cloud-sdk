#!/usr/bin/env node

'use strict'

const MIN_NODE_VERSION = '8.9.0'

const commander = require('commander')
const logger = require('../lib/logger')

// set version (includes version command)
const {version} = require('../package.json')
commander.version(version)

// load all custom actions
const actions = require('../')
Object.keys(actions).forEach(a => new actions[a]().register(commander))

// check node version
if (!hasNeededNodeVersion()) {
  console.warn(`You have a outdated node version (${process.version}). Please upgrade to the newest version`)
  process.exit(0)
}

// activate argument parsing
commander.parse(process.argv)

// undefined if no cmd is given on cli, object if a cmd was found, string if not
const executedCommand = commander.args.pop()
if (typeof executedCommand === 'string') logger.error(`Unknonwn command ${commander.args.join(' ')} ${executedCommand}`)
if (!executedCommand || typeof executedCommand === 'string') commander.help()

function hasNeededNodeVersion () {
  const versionParts = process.version.split('.')
  versionParts[0] = versionParts[0].slice(1)

  const acceptedVersionParts = MIN_NODE_VERSION.split('.')

  for (let i = 0; i < versionParts.length; i++) {
    if (versionParts[i] < acceptedVersionParts[i]) return false
  }

  return true
}